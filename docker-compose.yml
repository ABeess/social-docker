version: "3.3"
services:
  server:
    image: node:16-alpine
    container_name: server
    command: sh -c "yarn install --frozen-lockfile  && yarn build && yarn start"
    env_file:
      - variables.env
    volumes:
      - ./server:/src/server
    working_dir: /src/server
    ports:
      - "3089:3089"
      - "3098:3098"
    restart: "always"
    depends_on:
      - redis
    networks:
      - proxy

  client:
    image: node:16-alpine
    container_name: client
    env_file:
      - variables.env
    command: sh -c "yarn install && yarn build && npm install --global serve && yarn start"
    volumes:
      - ./client:/src/client
    working_dir: /src/client
    ports:
      - "3030:3030"
    restart: "always"
    networks:
      - proxy

  postgres:
    image: postgres:13.1
    healthcheck:
      test: ["CMD", "pg_isready", "-q", "-d", "postgres", "-U"]
      timeout: 45s
      interval: 10s
      retries: 10
    restart: always
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=abees
      - APP_DB_USER=postgres
      - APP_DB_PASS=abees
      - APP_DB_NAME=prod
    volumes:
      - ./db:/docker-entrypoint-initdb.d/
    ports:
      - 5432:5432
    networks:
      - proxy

  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4
    environment:
      PGADMIN_DEFAULT_EMAIL: abeesdevjs@gmail.com
      PGADMIN_DEFAULT_PASSWORD: abees
      PGADMIN_CONFIG_SERVER_MODE: "False"
    volumes:
      - pgadmin:/var/lib/pgadmin

    ports:
      - "5050:80"
    logging:
      driver: "none"

    restart: unless-stopped
    networks:
      - proxy
  redis:
    image: redis:latest
    container_name: redis
    command: redis-server --requirepass abeesdevjs --appendonly yes
    ports:
      - 6379:6379
    healthcheck:
      test: ["CMD-SHELL", "sh -c 'redis-cli PING'"]
      interval: 30s
      timeout: 30s
      retries: 3
    restart: "on-failure"

    networks:
      - proxy
networks:
  proxy:
    driver: bridge
volumes:
  pgadmin:
